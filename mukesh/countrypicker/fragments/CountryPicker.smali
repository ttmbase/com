.class public Lcom/mukesh/countrypicker/fragments/CountryPicker;
.super Landroidx/fragment/app/DialogFragment;
.source "SourceFile"

# interfaces
.implements Ljava/util/Comparator;


# annotations
.annotation system Ldalvik/annotation/Signature;
    value = {
        "Landroidx/fragment/app/DialogFragment;",
        "Ljava/util/Comparator<",
        "Lcom/mukesh/countrypicker/models/Country;",
        ">;"
    }
.end annotation


# instance fields
.field public adapter:Lcom/mukesh/countrypicker/adapters/CountryListAdapter;

.field public allCountriesList:Ljava/util/List;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/List<",
            "Lcom/mukesh/countrypicker/models/Country;",
            ">;"
        }
    .end annotation
.end field

.field public context:Landroid/content/Context;

.field public countryListView:Landroid/widget/ListView;

.field public listener:Lcom/mukesh/countrypicker/interfaces/CountryPickerListener;

.field public searchEditText:Landroid/widget/EditText;

.field public selectedCountriesList:Ljava/util/List;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/List<",
            "Lcom/mukesh/countrypicker/models/Country;",
            ">;"
        }
    .end annotation
.end field


# direct methods
.method public constructor <init>()V
    .locals 0

    .line 40
    invoke-direct {p0}, Landroidx/fragment/app/DialogFragment;-><init>()V

    return-void
.end method

.method public static synthetic access$000(Lcom/mukesh/countrypicker/fragments/CountryPicker;)Lcom/mukesh/countrypicker/interfaces/CountryPickerListener;
    .locals 0

    .line 40
    iget-object p0, p0, Lcom/mukesh/countrypicker/fragments/CountryPicker;->listener:Lcom/mukesh/countrypicker/interfaces/CountryPickerListener;

    return-object p0
.end method

.method public static synthetic access$100(Lcom/mukesh/countrypicker/fragments/CountryPicker;)Ljava/util/List;
    .locals 0

    .line 40
    iget-object p0, p0, Lcom/mukesh/countrypicker/fragments/CountryPicker;->selectedCountriesList:Ljava/util/List;

    return-object p0
.end method

.method public static synthetic access$200(Lcom/mukesh/countrypicker/fragments/CountryPicker;Ljava/lang/String;)V
    .locals 0

    .line 40
    invoke-virtual {p0, p1}, Lcom/mukesh/countrypicker/fragments/CountryPicker;->search(Ljava/lang/String;)V

    return-void
.end method

.method public static newInstance(Ljava/lang/String;)Lcom/mukesh/countrypicker/fragments/CountryPicker;
    .locals 3

    .line 105
    new-instance v0, Lcom/mukesh/countrypicker/fragments/CountryPicker;

    invoke-direct {v0}, Lcom/mukesh/countrypicker/fragments/CountryPicker;-><init>()V

    .line 106
    new-instance v1, Landroid/os/Bundle;

    invoke-direct {v1}, Landroid/os/Bundle;-><init>()V

    const-string v2, "dialogTitle"

    .line 107
    invoke-virtual {v1, v2, p0}, Landroid/os/Bundle;->putString(Ljava/lang/String;Ljava/lang/String;)V

    .line 108
    invoke-virtual {v0, v1}, Landroidx/fragment/app/Fragment;->setArguments(Landroid/os/Bundle;)V

    return-object v0
.end method

.method public static readEncodedJsonString()Ljava/lang/String;
    .locals 3
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Ljava/io/IOException;
        }
    .end annotation

    const-string v0, ""

    const/4 v1, 0x0

    .line 97
    invoke-static {v0, v1}, Landroid/util/Base64;->decode(Ljava/lang/String;I)[B

    move-result-object v0

    .line 98
    new-instance v1, Ljava/lang/String;

    const-string v2, "UTF-8"

    invoke-direct {v1, v0, v2}, Ljava/lang/String;-><init>([BLjava/lang/String;)V

    return-object v1
.end method


# virtual methods
.method public final afghanistan()Lcom/mukesh/countrypicker/models/Country;
    .locals 2

    .line 217
    new-instance v0, Lcom/mukesh/countrypicker/models/Country;

    invoke-direct {v0}, Lcom/mukesh/countrypicker/models/Country;-><init>()V

    const-string v1, "AF"

    .line 218
    invoke-virtual {v0, v1}, Lcom/mukesh/countrypicker/models/Country;->setCode(Ljava/lang/String;)V

    const-string v1, "+93"

    .line 219
    invoke-virtual {v0, v1}, Lcom/mukesh/countrypicker/models/Country;->setDialCode(Ljava/lang/String;)V

    .line 220
    sget v1, Lcom/mukesh/countrypicker/R$drawable;->flag_af:I

    invoke-virtual {v0, v1}, Lcom/mukesh/countrypicker/models/Country;->setFlag(I)V

    return-object v0
.end method

.method public compare(Lcom/mukesh/countrypicker/models/Country;Lcom/mukesh/countrypicker/models/Country;)I
    .locals 0

    .line 169
    invoke-virtual {p1}, Lcom/mukesh/countrypicker/models/Country;->getName()Ljava/lang/String;

    move-result-object p1

    invoke-virtual {p2}, Lcom/mukesh/countrypicker/models/Country;->getName()Ljava/lang/String;

    move-result-object p2

    invoke-virtual {p1, p2}, Ljava/lang/String;->compareTo(Ljava/lang/String;)I

    move-result p1

    return p1
.end method

.method public bridge synthetic compare(Ljava/lang/Object;Ljava/lang/Object;)I
    .locals 0

    .line 40
    check-cast p1, Lcom/mukesh/countrypicker/models/Country;

    check-cast p2, Lcom/mukesh/countrypicker/models/Country;

    invoke-virtual {p0, p1, p2}, Lcom/mukesh/countrypicker/fragments/CountryPicker;->compare(Lcom/mukesh/countrypicker/models/Country;Lcom/mukesh/countrypicker/models/Country;)I

    move-result p1

    return p1
.end method

.method public final getAllCountries()Ljava/util/List;
    .locals 5
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "()",
            "Ljava/util/List<",
            "Lcom/mukesh/countrypicker/models/Country;",
            ">;"
        }
    .end annotation

    .line 71
    iget-object v0, p0, Lcom/mukesh/countrypicker/fragments/CountryPicker;->allCountriesList:Ljava/util/List;

    if-nez v0, :cond_1

    .line 73
    :try_start_0
    new-instance v0, Ljava/util/ArrayList;

    invoke-direct {v0}, Ljava/util/ArrayList;-><init>()V

    iput-object v0, p0, Lcom/mukesh/countrypicker/fragments/CountryPicker;->allCountriesList:Ljava/util/List;

    .line 74
    invoke-static {}, Lcom/mukesh/countrypicker/fragments/CountryPicker;->readEncodedJsonString()Ljava/lang/String;

    move-result-object v0

    .line 75
    new-instance v1, Lorg/json/JSONArray;

    invoke-direct {v1, v0}, Lorg/json/JSONArray;-><init>(Ljava/lang/String;)V

    const/4 v0, 0x0

    .line 76
    :goto_0
    invoke-virtual {v1}, Lorg/json/JSONArray;->length()I

    move-result v2

    if-ge v0, v2, :cond_0

    .line 77
    invoke-virtual {v1, v0}, Lorg/json/JSONArray;->getJSONObject(I)Lorg/json/JSONObject;

    move-result-object v2

    const-string v3, "dial_code"

    .line 78
    invoke-virtual {v2, v3}, Lorg/json/JSONObject;->getString(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v3

    const-string v4, "code"

    .line 79
    invoke-virtual {v2, v4}, Lorg/json/JSONObject;->getString(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v2

    .line 80
    new-instance v4, Lcom/mukesh/countrypicker/models/Country;

    invoke-direct {v4}, Lcom/mukesh/countrypicker/models/Country;-><init>()V

    .line 81
    invoke-virtual {v4, v2}, Lcom/mukesh/countrypicker/models/Country;->setCode(Ljava/lang/String;)V

    .line 82
    invoke-virtual {v4, v3}, Lcom/mukesh/countrypicker/models/Country;->setDialCode(Ljava/lang/String;)V

    .line 83
    iget-object v2, p0, Lcom/mukesh/countrypicker/fragments/CountryPicker;->allCountriesList:Ljava/util/List;

    invoke-interface {v2, v4}, Ljava/util/List;->add(Ljava/lang/Object;)Z

    add-int/lit8 v0, v0, 0x1

    goto :goto_0

    .line 85
    :cond_0
    iget-object v0, p0, Lcom/mukesh/countrypicker/fragments/CountryPicker;->allCountriesList:Ljava/util/List;

    invoke-static {v0, p0}, Ljava/util/Collections;->sort(Ljava/util/List;Ljava/util/Comparator;)V

    .line 86
    new-instance v0, Ljava/util/ArrayList;

    invoke-direct {v0}, Ljava/util/ArrayList;-><init>()V

    iput-object v0, p0, Lcom/mukesh/countrypicker/fragments/CountryPicker;->selectedCountriesList:Ljava/util/List;

    .line 87
    iget-object v0, p0, Lcom/mukesh/countrypicker/fragments/CountryPicker;->selectedCountriesList:Ljava/util/List;

    iget-object v1, p0, Lcom/mukesh/countrypicker/fragments/CountryPicker;->allCountriesList:Ljava/util/List;

    invoke-interface {v0, v1}, Ljava/util/List;->addAll(Ljava/util/Collection;)Z

    .line 88
    iget-object v0, p0, Lcom/mukesh/countrypicker/fragments/CountryPicker;->allCountriesList:Ljava/util/List;
    :try_end_0
    .catch Ljava/lang/Exception; {:try_start_0 .. :try_end_0} :catch_0

    return-object v0

    :catch_0
    move-exception v0

    .line 90
    invoke-virtual {v0}, Ljava/lang/Exception;->printStackTrace()V

    :cond_1
    const/4 v0, 0x0

    return-object v0
.end method

.method public final getCountry(Ljava/lang/String;)Lcom/mukesh/countrypicker/models/Country;
    .locals 3

    .line 205
    invoke-virtual {p0}, Lcom/mukesh/countrypicker/fragments/CountryPicker;->getAllCountries()Ljava/util/List;

    const/4 v0, 0x0

    .line 206
    :goto_0
    iget-object v1, p0, Lcom/mukesh/countrypicker/fragments/CountryPicker;->allCountriesList:Ljava/util/List;

    invoke-interface {v1}, Ljava/util/List;->size()I

    move-result v1

    if-ge v0, v1, :cond_1

    .line 207
    iget-object v1, p0, Lcom/mukesh/countrypicker/fragments/CountryPicker;->allCountriesList:Ljava/util/List;

    invoke-interface {v1, v0}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/mukesh/countrypicker/models/Country;

    .line 208
    invoke-virtual {v1}, Lcom/mukesh/countrypicker/models/Country;->getCode()Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v2, p1}, Ljava/lang/String;->equalsIgnoreCase(Ljava/lang/String;)Z

    move-result v2

    if-eqz v2, :cond_0

    .line 209
    invoke-virtual {v1}, Lcom/mukesh/countrypicker/models/Country;->getCode()Ljava/lang/String;

    move-result-object p1

    invoke-virtual {p0, p1}, Lcom/mukesh/countrypicker/fragments/CountryPicker;->getFlagResId(Ljava/lang/String;)I

    move-result p1

    invoke-virtual {v1, p1}, Lcom/mukesh/countrypicker/models/Country;->setFlag(I)V

    return-object v1

    :cond_0
    add-int/lit8 v0, v0, 0x1

    goto :goto_0

    .line 213
    :cond_1
    invoke-virtual {p0}, Lcom/mukesh/countrypicker/fragments/CountryPicker;->afghanistan()Lcom/mukesh/countrypicker/models/Country;

    move-result-object p1

    return-object p1
.end method

.method public final getFlagResId(Ljava/lang/String;)I
    .locals 3

    .line 226
    :try_start_0
    iget-object v0, p0, Lcom/mukesh/countrypicker/fragments/CountryPicker;->context:Landroid/content/Context;

    invoke-virtual {v0}, Landroid/content/Context;->getResources()Landroid/content/res/Resources;

    move-result-object v0

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "flag_"

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    sget-object v2, Ljava/util/Locale;->ENGLISH:Ljava/util/Locale;

    .line 227
    invoke-virtual {p1, v2}, Ljava/lang/String;->toLowerCase(Ljava/util/Locale;)Ljava/lang/String;

    move-result-object p1

    invoke-virtual {v1, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p1

    const-string v1, "drawable"

    iget-object v2, p0, Lcom/mukesh/countrypicker/fragments/CountryPicker;->context:Landroid/content/Context;

    .line 228
    invoke-virtual {v2}, Landroid/content/Context;->getPackageName()Ljava/lang/String;

    move-result-object v2

    .line 227
    invoke-virtual {v0, p1, v1, v2}, Landroid/content/res/Resources;->getIdentifier(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)I

    move-result p1
    :try_end_0
    .catch Ljava/lang/Exception; {:try_start_0 .. :try_end_0} :catch_0

    return p1

    :catch_0
    move-exception p1

    .line 230
    invoke-virtual {p1}, Ljava/lang/Exception;->printStackTrace()V

    const/4 p1, 0x0

    return p1
.end method

.method public getUserCountryInfo(Landroid/content/Context;)Lcom/mukesh/countrypicker/models/Country;
    .locals 2

    .line 173
    iput-object p1, p0, Lcom/mukesh/countrypicker/fragments/CountryPicker;->context:Landroid/content/Context;

    .line 174
    invoke-virtual {p0}, Lcom/mukesh/countrypicker/fragments/CountryPicker;->getAllCountries()Ljava/util/List;

    const-string v0, "phone"

    .line 176
    invoke-virtual {p1, v0}, Landroid/content/Context;->getSystemService(Ljava/lang/String;)Ljava/lang/Object;

    move-result-object p1

    check-cast p1, Landroid/telephony/TelephonyManager;

    .line 177
    invoke-virtual {p1}, Landroid/telephony/TelephonyManager;->getSimState()I

    move-result v0

    const/4 v1, 0x1

    if-eq v0, v1, :cond_0

    .line 178
    invoke-virtual {p1}, Landroid/telephony/TelephonyManager;->getSimCountryIso()Ljava/lang/String;

    move-result-object p1

    invoke-virtual {p0, p1}, Lcom/mukesh/countrypicker/fragments/CountryPicker;->getCountry(Ljava/lang/String;)Lcom/mukesh/countrypicker/models/Country;

    move-result-object p1

    return-object p1

    .line 180
    :cond_0
    invoke-virtual {p0}, Lcom/mukesh/countrypicker/fragments/CountryPicker;->afghanistan()Lcom/mukesh/countrypicker/models/Country;

    move-result-object p1

    return-object p1
.end method

.method public onCreateView(Landroid/view/LayoutInflater;Landroid/view/ViewGroup;Landroid/os/Bundle;)Landroid/view/View;
    .locals 1

    .line 114
    sget p2, Lcom/mukesh/countrypicker/R$layout;->country_picker:I

    const/4 p3, 0x0

    invoke-virtual {p1, p2, p3}, Landroid/view/LayoutInflater;->inflate(ILandroid/view/ViewGroup;)Landroid/view/View;

    move-result-object p1

    .line 115
    invoke-virtual {p0}, Landroidx/fragment/app/Fragment;->getArguments()Landroid/os/Bundle;

    move-result-object p2

    if-eqz p2, :cond_0

    const-string p3, "dialogTitle"

    .line 117
    invoke-virtual {p2, p3}, Landroid/os/Bundle;->getString(Ljava/lang/String;)Ljava/lang/String;

    move-result-object p2

    .line 118
    invoke-virtual {p0}, Landroidx/fragment/app/DialogFragment;->getDialog()Landroid/app/Dialog;

    move-result-object p3

    invoke-virtual {p3, p2}, Landroid/app/Dialog;->setTitle(Ljava/lang/CharSequence;)V

    .line 120
    invoke-virtual {p0}, Landroidx/fragment/app/Fragment;->getResources()Landroid/content/res/Resources;

    move-result-object p2

    sget p3, Lcom/mukesh/countrypicker/R$dimen;->cp_dialog_width:I

    invoke-virtual {p2, p3}, Landroid/content/res/Resources;->getDimensionPixelSize(I)I

    move-result p2

    .line 121
    invoke-virtual {p0}, Landroidx/fragment/app/Fragment;->getResources()Landroid/content/res/Resources;

    move-result-object p3

    sget v0, Lcom/mukesh/countrypicker/R$dimen;->cp_dialog_height:I

    invoke-virtual {p3, v0}, Landroid/content/res/Resources;->getDimensionPixelSize(I)I

    move-result p3

    .line 122
    invoke-virtual {p0}, Landroidx/fragment/app/DialogFragment;->getDialog()Landroid/app/Dialog;

    move-result-object v0

    invoke-virtual {v0}, Landroid/app/Dialog;->getWindow()Landroid/view/Window;

    move-result-object v0

    invoke-virtual {v0, p2, p3}, Landroid/view/Window;->setLayout(II)V

    .line 124
    :cond_0
    invoke-virtual {p0}, Lcom/mukesh/countrypicker/fragments/CountryPicker;->getAllCountries()Ljava/util/List;

    .line 125
    sget p2, Lcom/mukesh/countrypicker/R$id;->country_code_picker_search:I

    invoke-virtual {p1, p2}, Landroid/view/View;->findViewById(I)Landroid/view/View;

    move-result-object p2

    check-cast p2, Landroid/widget/EditText;

    iput-object p2, p0, Lcom/mukesh/countrypicker/fragments/CountryPicker;->searchEditText:Landroid/widget/EditText;

    .line 126
    sget p2, Lcom/mukesh/countrypicker/R$id;->country_code_picker_listview:I

    invoke-virtual {p1, p2}, Landroid/view/View;->findViewById(I)Landroid/view/View;

    move-result-object p2

    check-cast p2, Landroid/widget/ListView;

    iput-object p2, p0, Lcom/mukesh/countrypicker/fragments/CountryPicker;->countryListView:Landroid/widget/ListView;

    .line 128
    new-instance p2, Lcom/mukesh/countrypicker/adapters/CountryListAdapter;

    invoke-virtual {p0}, Landroidx/fragment/app/Fragment;->getActivity()Landroidx/fragment/app/FragmentActivity;

    move-result-object p3

    iget-object v0, p0, Lcom/mukesh/countrypicker/fragments/CountryPicker;->selectedCountriesList:Ljava/util/List;

    invoke-direct {p2, p3, v0}, Lcom/mukesh/countrypicker/adapters/CountryListAdapter;-><init>(Landroid/content/Context;Ljava/util/List;)V

    iput-object p2, p0, Lcom/mukesh/countrypicker/fragments/CountryPicker;->adapter:Lcom/mukesh/countrypicker/adapters/CountryListAdapter;

    .line 129
    iget-object p2, p0, Lcom/mukesh/countrypicker/fragments/CountryPicker;->countryListView:Landroid/widget/ListView;

    iget-object p3, p0, Lcom/mukesh/countrypicker/fragments/CountryPicker;->adapter:Lcom/mukesh/countrypicker/adapters/CountryListAdapter;

    invoke-virtual {p2, p3}, Landroid/widget/ListView;->setAdapter(Landroid/widget/ListAdapter;)V

    .line 131
    iget-object p2, p0, Lcom/mukesh/countrypicker/fragments/CountryPicker;->countryListView:Landroid/widget/ListView;

    new-instance p3, Lcom/mukesh/countrypicker/fragments/CountryPicker$1;

    invoke-direct {p3, p0}, Lcom/mukesh/countrypicker/fragments/CountryPicker$1;-><init>(Lcom/mukesh/countrypicker/fragments/CountryPicker;)V

    invoke-virtual {p2, p3}, Landroid/widget/ListView;->setOnItemClickListener(Landroid/widget/AdapterView$OnItemClickListener;)V

    .line 142
    iget-object p2, p0, Lcom/mukesh/countrypicker/fragments/CountryPicker;->searchEditText:Landroid/widget/EditText;

    new-instance p3, Lcom/mukesh/countrypicker/fragments/CountryPicker$2;

    invoke-direct {p3, p0}, Lcom/mukesh/countrypicker/fragments/CountryPicker$2;-><init>(Lcom/mukesh/countrypicker/fragments/CountryPicker;)V

    invoke-virtual {p2, p3}, Landroid/widget/EditText;->addTextChangedListener(Landroid/text/TextWatcher;)V

    return-object p1
.end method

.method public final search(Ljava/lang/String;)V
    .locals 4
    .annotation build Landroid/annotation/SuppressLint;
        value = {
            "DefaultLocale"
        }
    .end annotation

    .line 159
    iget-object v0, p0, Lcom/mukesh/countrypicker/fragments/CountryPicker;->selectedCountriesList:Ljava/util/List;

    invoke-interface {v0}, Ljava/util/List;->clear()V

    .line 160
    iget-object v0, p0, Lcom/mukesh/countrypicker/fragments/CountryPicker;->allCountriesList:Ljava/util/List;

    invoke-interface {v0}, Ljava/util/List;->iterator()Ljava/util/Iterator;

    move-result-object v0

    :cond_0
    :goto_0
    invoke-interface {v0}, Ljava/util/Iterator;->hasNext()Z

    move-result v1

    if-eqz v1, :cond_1

    invoke-interface {v0}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/mukesh/countrypicker/models/Country;

    .line 161
    invoke-virtual {v1}, Lcom/mukesh/countrypicker/models/Country;->getName()Ljava/lang/String;

    move-result-object v2

    sget-object v3, Ljava/util/Locale;->ENGLISH:Ljava/util/Locale;

    invoke-virtual {v2, v3}, Ljava/lang/String;->toLowerCase(Ljava/util/Locale;)Ljava/lang/String;

    move-result-object v2

    invoke-virtual {p1}, Ljava/lang/String;->toLowerCase()Ljava/lang/String;

    move-result-object v3

    invoke-virtual {v2, v3}, Ljava/lang/String;->contains(Ljava/lang/CharSequence;)Z

    move-result v2

    if-eqz v2, :cond_0

    .line 162
    iget-object v2, p0, Lcom/mukesh/countrypicker/fragments/CountryPicker;->selectedCountriesList:Ljava/util/List;

    invoke-interface {v2, v1}, Ljava/util/List;->add(Ljava/lang/Object;)Z

    goto :goto_0

    .line 165
    :cond_1
    iget-object p1, p0, Lcom/mukesh/countrypicker/fragments/CountryPicker;->adapter:Lcom/mukesh/countrypicker/adapters/CountryListAdapter;

    invoke-virtual {p1}, Landroid/widget/BaseAdapter;->notifyDataSetChanged()V

    return-void
.end method

.method public setListener(Lcom/mukesh/countrypicker/interfaces/CountryPickerListener;)V
    .locals 0

    .line 51
    iput-object p1, p0, Lcom/mukesh/countrypicker/fragments/CountryPicker;->listener:Lcom/mukesh/countrypicker/interfaces/CountryPickerListener;

    return-void
.end method
